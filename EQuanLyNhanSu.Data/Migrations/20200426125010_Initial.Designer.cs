// <auto-generated />
using System;
using EQuanLyNhanSu.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EQuanLyNhanSu.Data.Migrations
{
    [DbContext(typeof(EQuanLyNhanSuDbContext))]
    [Migration("20200426125010_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.HopDong", b =>
                {
                    b.Property<int>("MaHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<int>("NgayBatDau")
                        .HasColumnType("int");

                    b.Property<int>("NgayKetThuc")
                        .HasColumnType("int");

                    b.HasKey("MaHD");

                    b.HasIndex("MaNV")
                        .IsUnique();

                    b.ToTable("HopDongs");
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.Info", b =>
                {
                    b.Property<int>("iMaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HKTT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HocVan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<string>("NguyenQuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocTich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SDT")
                        .HasColumnType("int");

                    b.Property<string>("TonGiao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrinhDoNgoaiNgu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iMaNV");

                    b.HasIndex("MaNV")
                        .IsUnique();

                    b.ToTable("Infos");
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.Luong", b =>
                {
                    b.Property<int>("MaLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LuongCoBan")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<int>("PhuCap")
                        .HasColumnType("int");

                    b.Property<int>("SoNgayLam")
                        .HasColumnType("int");

                    b.HasKey("MaLuong");

                    b.HasIndex("MaNV");

                    b.ToTable("Luongs");
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.NhanVien", b =>
                {
                    b.Property<int>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CMND")
                        .HasColumnType("int");

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaPb")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNV");

                    b.HasIndex("MaPb");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.PhongBan", b =>
                {
                    b.Property<int>("MaPb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SDT")
                        .HasColumnType("int");

                    b.Property<string>("TenPhongBan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPb");

                    b.ToTable("PhongBans");
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.HopDong", b =>
                {
                    b.HasOne("EQuanLyNhanSu.Data.Entities.NhanVien", "NhanVien")
                        .WithOne("HopDong")
                        .HasForeignKey("EQuanLyNhanSu.Data.Entities.HopDong", "MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.Info", b =>
                {
                    b.HasOne("EQuanLyNhanSu.Data.Entities.NhanVien", "NhanVien")
                        .WithOne("Info")
                        .HasForeignKey("EQuanLyNhanSu.Data.Entities.Info", "MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.Luong", b =>
                {
                    b.HasOne("EQuanLyNhanSu.Data.Entities.NhanVien", "NhanVien")
                        .WithMany("Luongs")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EQuanLyNhanSu.Data.Entities.NhanVien", b =>
                {
                    b.HasOne("EQuanLyNhanSu.Data.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaPb")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
